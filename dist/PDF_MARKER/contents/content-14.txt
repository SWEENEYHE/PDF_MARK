《MySQL技术内幕：InnoDB存储引擎(第2版)》  0
《MySQL技术内幕：InnoDB存储引擎(第2版)》
推荐序
前言
第1章　MySQL体系结构和存储引擎1
1.1　定义数据库和实例1
1.2　MySQL体系结构3
1.3　MySQL存储引擎5
1.3.1　InnoDB存储引擎6
1.3.2　MyISAM存储引擎7
1.3.3　NDB存储引擎7
1.3.4　Memory存储引擎8
1.3.5　Archive存储引擎9
1.3.6　Federated存储引擎9
1.3.7　Maria存储引擎9
1.3.8　其他存储引擎9
1.4　各存储引擎之间的比较10
1.5　连接MySQL13
1.5.1　TCP/IP13
1.5.2　命名管道和共享内存15
1.5.3　UNIX域套接字15
1.6　小结15
第2章　InnoDB存储引擎17
2.1　InnoDB存储引擎概述17
2.2　InnoDB存储引擎的版本18
2.3　InnoDB体系架构19
2.3.1　后台线程19
2.3.2　内存22
2.4　Checkpoint技术32
2.5　Master Thread工作方式36
2.5.1　InnoDB 1.0.x版本之前的Master Thread36
2.5.2　InnoDB1.2.x版本之前的Master Thread41
2.5.3　InnoDB1.2.x版本的Master Thread45
2.6　InnoDB关键特性45
2.6.1　插入缓冲46
2.6.2　两次写53
2.6.3　自适应哈希索引55
2.6.4　异步IO57
2.6.5　刷新邻接页58
2.7　启动、关闭与恢复58
2.8　小结61
第3章　文件62
3.1　参数文件62
3.1.1　什么是参数63
3.1.2　参数类型64
3.2　日志文件65
3.2.1　错误日志66
3.2.2　慢查询日志67
3.2.3　查询日志72
3.2.4　二进制日志73
3.3　套接字文件83
3.4　pid文件83
3.5　表结构定义文件84
3.6　InnoDB存储引擎文件84
3.6.1　表空间文件85
3.6.2　重做日志文件86
3.7　小结90
第4章　表91
4.1　索引组织表91
4.2　InnoDB逻辑存储结构93
4.2.1　表空间93
4.2.2　段95
4.2.3　区95
4.2.4　页101
4.2.5　行101
4.3　InnoDB行记录格式102
4.3.1　Compact行记录格式103
4.3.2　Redundant行记录格式106
4.3.3　行溢出数据110
4.3.4　Compressed和Dynamic行记录格式117
4.3.5　CHAR的行结构存储117
4.4　InnoDB数据页结构120
4.4.1　File Header121
4.4.2　Page Header122
4.4.3　Infimum和Supremum Records123
4.4.4　User Records和Free Space123
4.4.5　Page Directory124
4.4.6　File Trailer124
4.4.7　InnoDB数据页结构示例分析125
4.5　Named File Formats机制132
4.6　约束134
4.6.1　数据完整性134
4.6.2　约束的创建和查找135
4.6.3　约束和索引的区别137
4.6.4　对错误数据的约束137
4.6.5　ENUM和SET约束139
4.6.6　触发器与约束139
4.6.7　外键约束142
4.7　视图144
4.7.1　视图的作用144
4.7.2　物化视图147
4.8　分区表152
4.8.1　分区概述152
4.8.2　分区类型155
4.8.3　子分区168
4.8.4　分区中的NULL值172
4.8.5　分区和性能176
4.8.6　在表和分区间交换数据180
4.9　小结182
第5章　索引与算法183
5.1　InnoDB存储引擎索引概述183
5.2　数据结构与算法184
5.2.1　二分查找法184
5.2.2　二叉查找树和平衡二叉树185
5.3　B+树187
5.3.1　B+树的插入操作187
5.3.2　B+树的删除操作190
5.4　B+树索引191
5.4.1　聚集索引192
5.4.2　辅助索引196
5.4.3　B+树索引的分裂200
5.4.4　B+树索引的管理202
5.5　Cardinality值210
5.5.1　什么是Cardinality210
5.5.2　InnoDB存储引擎的Cardinality统计212
5.6　B+树索引的使用215
5.6.1　不同应用中B+树索引的使用215
5.6.2　联合索引215
5.6.3　覆盖索引218
5.6.4　优化器选择不使用索引的情况219
5.6.5　索引提示221
5.6.6　Multi-Range Read优化223
5.6.7　Index Condition Pushdown（ICP）优化226
5.7　哈希算法227
5.7.1　哈希表228
5.7.2　InnoDB存储引擎中的哈希算法229
5.7.3　自适应哈希索引230
5.8　全文检索231
5.8.1　概述231
5.8.2　倒排索引232
5.8.3　InnoDB全文检索233
5.8.4　全文检索240
5.9　小结248
第6章　锁249
6.1　什么是锁249
6.2　lock与latch250
6.3　InnoDB存储引擎中的锁252
6.3.1　锁的类型252
6.3.2　一致性非锁定读258
6.3.3　一致性锁定读261
6.3.4　自增长与锁262
6.3.5　外键和锁264
6.4　锁的算法265
6.4.1　行锁的3种算法265
6.4.2　解决Phantom Problem269
6.5　锁问题271
6.5.1　脏读271
6.5.2　不可重复读273
6.5.3　丢失更新274
6.6　阻塞276
6.7　死锁278
6.7.1　死锁的概念278
6.7.2　死锁概率280
6.7.3　死锁的示例281
6.8　锁升级283
6.9　小结284
第7章　事务285
7.1　认识事务285
7.1.1　概述285
7.1.2　分类287
7.2　事务的实现294
7.2.1　redo294
7.2.2　undo305
7.2.3　purge317
7.2.4　group commit319
7.3　事务控制语句323
7.4　隐式提交的SQL语句328
7.5　对于事务操作的统计329
7.6　事务的隔离级别330
7.7　分布式事务335
7.7.1　MySQL数据库分布式事务335
7.7.2　内部XA事务340
7.8　不好的事务习惯341
7.8.1　在循环中提交341
7.8.2　使用自动提交343
7.8.3　使用自动回滚344
7.9　长事务347
7.10　小结349
第8章　备份与恢复350
8.1　备份与恢复概述350
8.2　冷备352
8.3　逻辑备份353
8.3.1　mysqldump353
8.3.2　SELECT...INTO OUTFILE360
8.3.3　逻辑备份的恢复362
8.3.4　LOAD DATA INFILE362
8.3.5　mysqlimport364
8.4　二进制日志备份与恢复366
8.5　热备367
8.5.1　ibbackup367
8.5.2　XtraBackup368
8.5.3　XtraBackup实现增量备份370
8.6　快照备份372
8.7　复制376
8.7.1　复制的工作原理376
8.7.2　快照+复制的备份架构380
8.8　小结382
第9章　性能调优383
9.1　选择合适的CPU383
9.2　内存的重要性384
9.3　硬盘对数据库性能的影响387
9.3.1　传统机械硬盘387
9.3.2　固态硬盘387
9.4　合理地设置RAID389
9.4.1　RAID类型389
9.4.2　RAID Write Back功能392
9.4.3　RAID配置工具394
9.5　操作系统的选择397
9.6　不同的文件系统对数据库性能的影响398
9.7　选择合适的基准测试工具399
9.7.1　sysbench399
9.7.2　mysql-tpcc405
9.8　小结410
第10章　InnoDB存储引擎源代码的编译和调试411
10.1　获取InnoDB存储引擎源代码411
10.2　InnoDB源代码结构413
10.3　MySQL 5.1版本编译和调试InnoDB源代码415
10.3.1　Windows下的调试415
10.3.2　Linux下的调试418
10.4　cmake方式编译和调试InnoDB存储引擎423
10.5　小结424


